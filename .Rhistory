box()
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
plot.new()
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
polygon(c(1,2,3,4,5,1))
polygon(c(1,2,3))
plot.window()
plot(1,1,type = 'm')
polygon(c(1,2,3))
?polygon
polygon(c(1,2,3), c(2,3,4))
polygon(c(1,2,3), c(2,3,4,5,6,))
polygon(c(1,2,3), c(2,3,4,5,6,7))
polygon(c(1,2,3,4,5,6,7), c(2,3,4,5,6,7))
polygon(c(1,2,3,4,5,6), c(2,3,4,5,6,7))
polt()
plot()
plot(type = 'n')
plot(1,1type = 'n')
plot(1,1,type = 'n')
polygon(1,2)
polygon(c(1,2,3,1))
plot(1,1,type = 'n')
polygon(c(1,2))
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,2))
polygon(c(1,2), c(2,3))
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,2), c(2,3))
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,2,2,1), c(1,1,2,2))
polygon(c(1,2,2), c(1,1,2))
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,2,2), c(1,1,2))
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,5,5), c(1,1,5)
)
polygon(c(1,5,5), c(1,1,5), col = 2)
polygon(c(1,5,5), c(1,1,5), col = 2, border = NA)
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,5,5), c(1,1,5), col = 2, border = NA)
polygon(c(1,5,5), c(1,1,5), col = 2, border = T)
polygon(c(1,5,5), c(1,1,5), col = 2, border = F)
plot(1,1,type = 'n', xlim = c(0,5), ylim=c(0,5))
polygon(c(1,5,5), c(1,1,5), col = 2, border = F)
2 %in% c(12,3,4,2)
2 %in% c(12,3,4,3)
col2rgb('black')
mean(col2rgb('black'))
mean(col2rgb('blue'))
fg = unlist(lapply(cols,
function(x)
ifelse(mean(col2rgb(x)) > 127 | toupper(x) %in% #col2rgb 색깔 숫자로 나타내줌
c("WHITE", "#FFFFFF"), "black", "white")))
col2rgb('blue')
mean(col2rgb('skyblue'))
col2rgb('skyblue')
v = c("a,b,c,b,e","a,b","d,e,f")
lapply(v,nchar)
col.table <- function(cols, main=NULL, fg=NULL) {
n <- length(cols)
plot(seq(n), rep(1, n), xlim = c(0, n), ylim = c(0, 1),
type = "n", xlab = "", ylab = "", axes = F) #type='n' none임 아무것도 안 그리는거
if(is.null(main))
{
main=paste("Color Table by", deparse(substitute(cols)))
}
title(main=main)
if(is.null(fg))
{
fg = unlist(lapply(cols, ifelse(mean(col2rgb(x)) > 127 | toupper(x) %in% #col2rgb 색깔 숫자로 나타내줌
c("WHITE", "#FFFFFF"), "black", "white")))
} else
fg = rep(fg, n)
for(i in 1:n)
{
polygon(c(i - 1, i - 1, i, i), c(0.05, 1, 1, 0.05), col = cols[i]) #polygon 좌표 순서대로 선이어서 다각형 그려줌
text(mean(c(i - 1, i)), 0.52, labels = cols[i], srt=90, adj=0.5, col=fg[i], cex=1.2)
} #srt string rotation 돌리는거 adj=0.5 가운데 정렬
}
col.table(1:16)
col.table(5:20)
col.table <- function(cols, main=NULL, fg=NULL) {
n <- length(cols)
plot(seq(n), rep(1, n), xlim = c(0, n), ylim = c(0, 1),
type = "n", xlab = "", ylab = "", axes = F) #type='n' none임 아무것도 안 그리는거
if(is.null(main))
{
main=paste("Color Table by", deparse(substitute(cols)))
}
title(main=main)
if(is.null(fg))
{
fg = unlist(lapply(cols,
function(x)
ifelse(mean(col2rgb(x)) > 127 | toupper(x) %in% #col2rgb 색깔 숫자로 나타내줌
c("WHITE", "#FFFFFF"), "black", "white")))
} else
fg = rep(fg, n)
for(i in 1:n)
{
polygon(c(i - 1, i - 1, i, i), c(0.05, 1, 1, 0.05), col = cols[i]) #polygon 좌표 순서대로 선이어서 다각형 그려줌
text(mean(c(i - 1, i)), 0.52, labels = cols[i], srt=90, adj=0.5, col=fg[i], cex=1.2)
} #srt string rotation 돌리는거 adj=0.5 가운데 정렬
}
col.table(1:16)
plot(1,1, type='n', xlim=c(0,4), ylim = c(0,4))
col.map(colors())
box()
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.new()
plot(1,1, type = 'n',pxlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.new()
plot(1,1, type = 'n',xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.new()
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.new()
plot(1,1, type = 'n',xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
box()
sqrt(length(colors()))
floor(sqrt(length(colors())))
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot(1,1, type = 'n',xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
plot.new()
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot(1,1, type = 'n',xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
plot.new()
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(colors())
seqs<-seq(0,255, length = 15)
seqs
hexs<- toupper(as.character.hexmode(seqs))
hexs
as.character.hexmode(23)
as.character.hexmode(23.2)
as.character.hexmode(24)
as.character.hexmode(24.6)
as.character.hexmode(23.999)
hexs
rev(hexs)
red <- paste0('#', hexs, '0000')
red
green <- paste0('#00', hexs, '00')
red
grred
green
blue <- paste0("#0000", hexs)
blue
mix1 <- paste0("#", hexs,hexs,hexs)
mix2 <- paste0('#', hexs, hexs, hexs)
,ix1
mmix1
mix1
par(mfrow=c(1,1), mar=c(1,1,3,1))
col.table(red)
col.table(blue)
col.table(greedn)
col.table(green)
col.table(mix1)
col.table(mix2)
mix2 <- paste("#", rev(hexs), hexs, rev(hexs), sep = "")
col.table(mix2)
mix1 <- paste("#", hexs, hexs, hexs, sep = "")
col.table(mix1)
col.table(mix2)
mix1 <- paste("#", hexs, hexs, rev(hexs), sep = "")
col.table(mix1)
x = c("#332211","#130015","#AA4455")
col.table(x)
r = seq(50,200,length=10)
r
g = 255
b = c(10,20)
hr = as.character.hexmode(r)
hr
toupper(hr)
x = paste0("#",toupper(hr),toupper(as.character.hexmode(g)),
toupper(as.character.hexmode(b))[1],"1B")
x
col.table(x)
x
x = paste0("#",toupper(hr),toupper(as.character.hexmode(g)),
toupper(as.character.hexmode(b))[1])
x
col.table(x)
x = paste0("#",toupper(hr),toupper(as.character.hexmode(g)),
toupper(as.character.hexmode(b))[1], '1A')
x
col.table(x)
x = paste0("#",toupper(hr),toupper(as.character.hexmode(g)),
toupper(as.character.hexmode(b))[1], '1')
x
col.table(x)
x = paste0("#",toupper(hr),toupper(as.character.hexmode(g)),
toupper(as.character.hexmode(b))[1], '01')
x
col.table(x)
rainbow(20)
rainbow()
rainbow(2)
rainbow(10000)
?rainbow
par(mfrow = c(6, 1), mar = c(0, 0, 2, 0))
col.table(rainbow(20))
col.table(heat.colors(20))
col.table(terrain.colors(20))
col.table(topo.colors(20))
col.table(cm.colors(20))
col.table(gray(seq(0,255,length=20)/255))
gray(4)
gray(0.2)
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
plot.new()
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
x11()
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
plot.window(xlim=c(1,2), ylim = c(1,2))
x11()
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
col.map(colors())
col.map(colors())
x11()
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
par(mfrow = c(2, 2), mar = c(0, 0, 2, 0))
col.map(rainbow(400, start = 0, end = 0.8))
col.map(heat.colors(400))
col.map(cm.colors(400))
col.map(topo.colors(400))
seqs <- seq(0, 255, length = 20)
seqs <- seq(0, 255, length = 20)
alpha <- toupper(as.character.hexmode(seqs))
par(mfrow = c(5, 1), mar = c(0, 0, 2, 0))
col.table(paste("#FF0000", alpha, sep = ""), fg = 1)
col.table(paste("#00FF00", alpha, sep = ""), fg = 1)
col.table(paste("#0000FF", alpha, sep = ""), fg = 1)
col.table(rainbow(20), main = "Alpha Channel 사용 안함")
col.table(rainbow(20, alpha = seq(0, 1, length = 20)),
main = "Alpha Channel 사용", fg=1)
col.table <- function(cols, main=NULL, fg=NULL) {
n <- length(cols)
plot(seq(n), rep(1, n), xlim = c(0, n), ylim = c(0, 1),
type = "n", xlab = "", ylab = "", axes = F) #type='n' none임 아무것도 안 그리는거
if(is.null(main))
{
main=paste("Color Table by", deparse(substitute(cols)))
}
title(main=main)
if(is.null(fg))
{
fg = unlist(lapply(cols,
function(x)
ifelse(mean(col2rgb(x)) > 127 | toupper(x) %in% #col2rgb 색깔 숫자로 나타내줌
c("WHITE", "#FFFFFF"), "black", "white")))
} else
fg = rep(fg, n)
for(i in 1:n)
{
polygon(c(i - 1, i - 1, i, i), c(0.05, 1, 1, 0.05), col = cols[i]) #polygon 좌표 순서대로 선이어서 다각형 그려줌
text(mean(c(i - 1, i)), 0.52, labels = cols[i], srt=90, adj=0.5, col=fg[i], cex=1.2)
} #srt string rotation 돌리는거 adj=0.5 가운데 정렬
}
seqs <- seq(0, 255, length = 20)
alpha <- toupper(as.character.hexmode(seqs))
par(mfrow = c(5, 1), mar = c(0, 0, 2, 0))
col.table(paste("#FF0000", alpha, sep = ""), fg = 1)
col.table(paste("#00FF00", alpha, sep = ""), fg = 1)
col.table(paste("#0000FF", alpha, sep = ""), fg = 1)
col.table(rainbow(20), main = "Alpha Channel 사용 안함")
col.table(rainbow(20, alpha = seq(0, 1, length = 20)),
main = "Alpha Channel 사용", fg=1)
seqs <- seq(0, 255, length = 20)
alpha <- toupper(as.character.hexmode(seqs))
x <- c(1, 1.3, 1.6)
y <- c(1, 2, 1)
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x,y, pch =16, cex = 20, col = c('red', 'green', 'blue'), xlim = c(0,3), ylim = c(-2,5))
par( mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green", "blue"),
xlim = c(0,3), ylim = c(-2, 5))
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green", "blue"),
xlim = c(0,3), ylim = c(-2, 5))
plot(x, y, pch = 16, cex = 20, col = c("red", "green", "blue", 2),
xlim = c(0,3), ylim = c(-2, 5))
plot(x, y, pch = 16, cex = 20, col = 2,
xlim = c(0,3), ylim = c(-2, 5))
plot(x, y, pch = 16, cex = 20, col = c("red", "green"),
xlim = c(0,3), ylim = c(-2, 5))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",3),
xlim = c(0,3), ylim = c(-2, 5))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
plot(x,y, pch =16, cex= 20, col=c('#FF000022', "#00FF0022", "#0000FF22"), xlim = c(0,3), ylim = c(-2,5))
title(main = 'alpha channle by \"\77\"')
title(main = "alpha channle by \"77\"")
par(mfrow=c(2,2))
title(main = "alpha channle by \"77\"")
title(main = "alpha channle by \"77\"")
title(main = "alpha channle by \"77\"")
title(main = "alpha channle by \"77\"")
title(main = "alpha channle by \"77\"")
title(main = 'alpha channle by \"\77\"')
title(main = 'alpha channle by "\77\"')
title(main = 'alpha channle by \"\57\"')
x <- c(1, 1.3, 1.6)
y <- c(1, 2, 1)
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
plot(x, y, pch = 16, cex = 20, col = c("#FF000022", "#00FF0022", "#0000FF22"),
xlim = c(0, 3), ylim = c(-2, 5))
title(main = "alpha channle by \"77\"")
x <- c(1, 1.3, 1.6)
y <- c(1, 2, 1)
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
plot(x, y, pch = 16, cex = 20, col = c("#FF000022", "#00FF0022", "#0000FF22"),
xlim = c(0, 3), ylim = c(-2, 5))
title(main = 'alpha channle by \"\77\"')
x <- c(1, 1.3, 1.6)
y <- c(1, 2, 1)
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
plot(x, y, pch = 16, cex = 20, col = c("#FF000022", "#00FF0022", "#0000FF22"),
xlim = c(0, 3), ylim = c(-2, 5))
title(main = "alpha channle by \"\77\"")
x <- c(1, 1.3, 1.6)
y <- c(1, 2, 1)
par(mar = c(4, 2, 3, 1), mfrow = c(1, 2))
plot(x, y, pch = 16, cex = 20, col = c("red", "green",'blue'),
xlim = c(0,3), ylim = c(-2, 5))
title(main = "col=c('red','green','blue')")
plot(x, y, pch = 16, cex = 20, col = c("#FF000022", "#00FF0022", "#0000FF22"),
xlim = c(0, 3), ylim = c(-2, 5))
title(main = "alpha channle by \"77\"")
par(mfrow=c(2,2))
par(mar=c(0.1,0.1,1,0.1))
hsv(0.5, 0.5, 0.5)
hsv1 <- c(hsv(0.5, 0.5, 0.5), hsv(0.6, 0.5, 0.5),
hsv(0.7, 0.5, 0.5), hsv(0.8, 0.5, 0.5))
hsv2 <- c(hsv(0.5, 0.5, 0.5), hsv(0.5, 0.6, 0.5),
hsv(0.5, 0.7, 0.5), hsv(0.5, 0.8, 0.5))
hsv3 <- c(hsv(0.5, 0.5, 0.5), hsv(0.5, 0.5, 0.6),
hsv(0.5, 0.5, 0.7), hsv(0.5, 0.5, 0.8))
hsv4 <- c(hsv(0.5, 0.5, 0.5), hsv(0.6, 0.6, 0.6),
hsv(0.7, 0.7, 0.7), hsv(0.8, 0.8, 0.8))
col.map(hsv1)
col.map <- function(cols=colors())
{
n <- length(cols)
cnt <- floor(sqrt(n)) #내림함수
plot.new()
plot.window(xlim=c(0, cnt), ylim=c(0, cnt)) #plot(type='n')이랑 똑같음
for (i in 1:cnt) for (j in 1:cnt)
rect(i-1, j-1, i, j, col=cols[(i-1)*cnt +j], border=NA)
#rectangular(a,b,c,d) (a,b) (c,d) 직사각형 그림
}
col.map(hsv1)
title("hsv1")
col.map(hsv2)
title("hsv2")
col.map(hsv3)
title("hsv3")
col.map(hsv4)
title("hsv4")
hsv1
hsv2
hsv3
hsv4
rm(list=ls())
setwd("C:\\Users\\Taekyeong\\Desktop\\나\\소프트웨어 실습")
ls()
source('C:/Users/Taekyeong/Desktop/나/소프트웨어 실습/0110.R', encoding = 'UTF-8')
dev.off() #디바이스를 닫아야 저장됨
graphics.off()
a = 1:10
b = 2*a + rnorm(10)
plot(a,b)
runif(3,0,1)
runif(3,0)
runif(3)
runif(3)
runif(3)
runif(3)
runif
png(filename = './ASD')
png(filename = './ASD.JPG')
png(filename='./test.png')
dev.off() #디바이스를 닫아야 저장됨
png(filename='./test.png')
a = 1:10
b = 2*a + rnorm(10)
plot(a,b)
dev.off() #
dev.copy(jpeg, filename = './test1yo.jpg')
dev.off()
dev.copy(jpeg, filename = './test1ywwo.jpg')
dev.off()
?dev.copy
